def func8(arg36, arg37):
    def func9(arg38, arg39):
        var40 = arg36 ^ arg39 & -654 ^ (((arg37 & -2114337447 | (arg37 + arg39)) & arg37) & 2146517140)
        var41 = arg38 & ((arg37 + var40) + arg38) - 375346412
        result = ((735669882 ^ (arg38 | var40 + arg39 + arg36)) + arg37) & (-146 | -624) | var40
        return result
    var42 = func9(arg36, arg37)
    result = -190 & (((2063046808 ^ ((-993 | (457 + (-1421215497 - (arg37 - arg37 + arg37) & var42))) | var42)) & -1083046073) + var42)
    return result
def func3(arg13, arg14):
    var17 = class4()
    for var18 in func6(arg14, arg13):
        var17.func5(arg13, var18)
    var34 = arg14 | arg14 - -602
    if arg14 < arg14:
        var35 = -139 & arg14
    else:
        var35 = var34 & arg13 | ((arg13 | -1581643934) - (-447378480 | (arg14 | -113730987) | arg13))
    result = arg14 ^ arg14
    return result
def func7(arg21, arg22):
    result = (141 & 424) | -853 & -2029085509 + arg22 + arg21 ^ 931 ^ arg21
    return result
def func6(arg19, arg20):
    var23 = func7(arg20, 437396966)
    yield var23
    var24 = (arg20 + 674) + (1753451932 | arg19)
    yield var24
    var25 = var24 - (arg20 - 1721325444)
    yield var25
    var26 = arg19 + 1060130487 | 717557484
    yield var26
    var27 = arg20 ^ -894 & 182
    yield var27
    var28 = (-689 - var25 + var24) + var25
    yield var28
    var29 = var25 - var25
    yield var29
    var30 = -724 ^ 631
    yield var30
    var31 = var27 ^ var27
    yield var31
    var32 = ((var25 + var30) | -603129313) + var26
    yield var32
    var33 = -706 - (var28 + var29)
    yield var33
class class4(object):
    def func5(self, arg15, arg16):
        result = (((1 & -1) | -1226641842) | 1707017594) ^ arg15 & arg15 - -1650217427
        return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = -38131018 - -812
    var9 = (((arg1 | -1314485125) + var7) & (var8 - var7)) | ((arg1 | arg2 | 1298440693) + arg2 + ((arg1 | (var7 | arg1) | arg2 - (arg1 - ((-589 ^ -745) & var8))) + (2121429945 - (var7 + var7)) ^ -820) & arg2)
    if arg1 < var8:
        var10 = ((((var7 & arg2) - arg1 & var8 | arg2) - (var8 | var8 ^ var8 | -852997455 ^ var8 ^ -1874075497 & (var8 | (-335888068 - -483) & var9) - var8 ^ (var7 ^ var7) + arg2 ^ -1438240068)) | var8) + var7
    else:
        var10 = -986 ^ (1236608565 & var9 - ((var9 + var8) ^ var7)) & 439
    var11 = var8 - (var7 - arg1 ^ var7)
    if arg2 < var8:
        var12 = var9 | var7 & ((var9 | var9) + 407 - var11) | arg1 ^ 1333480928
    else:
        var12 = arg1 + (arg1 ^ var7) + var11 | (arg2 + 990 + (var8 ^ var7) ^ (-307 + (var8 & var11 + var11) & 583 - arg1) ^ var9 + var8 + var11 + var8 & var9) - -965 | arg1 + var9
    result = (var7 ^ (arg1 & (var9 & (arg1 | var8 + var11 - var11 | arg1) | -30)) & var7 & var11) + arg1
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in (i & -3 for i in range(31)):
        var5 += var6 - (arg4 - arg4)
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 8'
    print 'arg_number: 36'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,
